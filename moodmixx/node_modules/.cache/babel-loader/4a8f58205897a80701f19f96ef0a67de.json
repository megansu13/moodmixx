{"ast":null,"code":"var _jsxFileName = \"/Users/megansu/Desktop/eecs441/moodmixx/moodmixx/src/Advanced.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Advanced() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastDirection, setLastDirection] = useState();\n  const [song, setSong] = useState(null);\n  const audioRef = useRef(new Audio());\n  const currentIndexRef = useRef(currentIndex);\n  const childRefs = useMemo(() => Array(songs.length).fill(0).map(() => /*#__PURE__*/React.createRef()), [songs.length]);\n  useEffect(() => {\n    fetchDaylist();\n  }, []);\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n    };\n  }, []);\n  const fetchDaylist = async () => {\n    setIsLoading(true);\n    try {\n      // Adjust the URL to where your backend endpoint for getDaylist is hosted\n      const response = await fetch(\"http://localhost:8080/playlistTracks\", {\n        credentials: \"include\",\n        mode: \"cors\"\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch daylist\");\n      const data = await response.json();\n      const thankYouCard = {\n        song_name: \"Thank You for Playing!\",\n        album_cover: \"https://eecs441soloway.github.io/images/soloway.jpg\",\n        // You could specify an image URL for the thank you card background\n        album_name: \"We hope you enjoyed the experience.\",\n        artist_names: \"- MoodMixx Team\",\n        isThankYouCard: true // A flag to identify the thank you card\n      };\n\n      setSongs([thankYouCard, ...data.song_info]);\n      setCurrentIndex(data.song_info.length);\n    } catch (error) {\n      console.error(\"Error fetching daylist:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const updateCurrentIndex = val => {\n    setCurrentIndex(val);\n    currentIndexRef.current = val;\n  };\n  const canGoBack = currentIndex < songs.length - 1;\n  const canSwipe = currentIndex >= 0;\n\n  // set last direction and decrease current index\n  function stop() {\n    audioRef.current.pause();\n  }\n  const swiped = (direction, nameToDelete, index, song_preview, track_id) => {\n    setLastDirection(direction);\n    updateCurrentIndex(index - 1);\n    stop();\n    if (direction === \"right\") {\n      // Make a POST request to the server to add track to Spotify library\n      fetch(\"http://localhost:8080/addTrack\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          trackId: track_id\n        }),\n        credentials: \"include\" // Include credentials for CORS and sessions\n      }).then(response => response.json()).then(data => {\n        console.log(data); // You can process server response here\n      }).catch(error => {\n        console.error(\"Error:\", error);\n      });\n    }\n  };\n  const outOfFrame = (name, idx) => {\n    console.log(`${name} (${idx}) left the screen!`, currentIndexRef.current);\n    // handle the case in which go back is pressed before card goes outOfFrame\n    currentIndexRef.current >= idx && childRefs[idx].current.restoreCard();\n    // TODO: when quickly swipe and restore multiple times the same card,\n    // it happens multiple outOfFrame events are queued and the card disappear\n    // during latest swipes. Only the last outOfFrame event should be considered valid\n  };\n\n  const swipe = async dir => {\n    if (canSwipe && currentIndex < songs.length) {\n      await childRefs[currentIndex].current.swipe(dir); // Swipe the card!\n    }\n  };\n\n  // increase current index and show card\n  const goBack = async () => {\n    if (!canGoBack) return;\n    const newIndex = currentIndex + 1;\n    updateCurrentIndex(newIndex);\n    stop();\n    await childRefs[newIndex].current.restoreCard();\n  };\n  function StartButton(_ref) {\n    let {\n      song_preview\n    } = _ref;\n    function start() {\n      if (song) {\n        song.pause(); // Ensures any currently playing song is stopped\n        song.currentTime = 0; // Resets the playback position\n      }\n\n      const audio = new Audio(song_preview);\n      audio.play();\n      setSong(audio);\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-button\",\n      onClick: start,\n      children: \"Play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n  function StopButton() {\n    function stop() {\n      console.log(\"song from react:\", song);\n      song.pause();\n      console.log(\"did this stop\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pause-button\",\n      onClick: stop,\n      children: \"Pause!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Inter:wght@400;500&family=MuseoModerno:ital,wght@0,100..900;1,100..900&display=swap\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Alatsi&display=swap\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"moodmixx-title\",\n      children: \"moodmixx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TinderCard, {\n          ref: childRefs[index],\n          className: \"swipe\",\n          onSwipe: dir => swiped(dir, song.song_name, index, song.preview_url, song.track_id),\n          onCardLeftScreen: () => outOfFrame(song.song_name, index),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\" + song.album_cover + \")\"\n            },\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: song.song_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [song.album_name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), song.artist_names]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n            song_preview: song.preview_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StopButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 16\n          }, this)]\n        }, song.song_name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: !canSwipe && \"#c3c4d3\"\n        },\n        onClick: () => swipe(\"left\"),\n        children: \"Swipe left!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: !canGoBack && \"#c3c4d3\"\n        },\n        onClick: () => goBack(),\n        children: \"Undo swipe!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: !canSwipe && \"#c3c4d3\"\n        },\n        onClick: () => swipe(\"right\"),\n        children: \"Swipe right!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), lastDirection ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"infoText\",\n      children: [\"You swiped \", lastDirection]\n    }, lastDirection, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"infoText\",\n      children: \"Swipe a card to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(Advanced, \"5haiaUsCWdze33xujesIBUQ1EqA=\");\n_c = Advanced;\nexport default Advanced;\nvar _c;\n$RefreshReg$(_c, \"Advanced\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useRef","TinderCard","Advanced","songs","setSongs","currentIndex","setCurrentIndex","isLoading","setIsLoading","lastDirection","setLastDirection","song","setSong","audioRef","Audio","currentIndexRef","childRefs","Array","length","fill","map","createRef","fetchDaylist","current","pause","response","fetch","credentials","mode","ok","Error","data","json","thankYouCard","song_name","album_cover","album_name","artist_names","isThankYouCard","song_info","error","console","updateCurrentIndex","val","canGoBack","canSwipe","stop","swiped","direction","nameToDelete","index","song_preview","track_id","method","headers","body","JSON","stringify","trackId","then","log","catch","outOfFrame","name","idx","restoreCard","swipe","dir","goBack","newIndex","StartButton","start","currentTime","audio","play","StopButton","preview_url","backgroundImage","backgroundColor"],"sources":["/Users/megansu/Desktop/eecs441/moodmixx/moodmixx/src/Advanced.js"],"sourcesContent":["import React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nfunction Advanced() {\n  const [songs, setSongs] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastDirection, setLastDirection] = useState();\n  const [song, setSong] = useState(null);\n  const audioRef = useRef(new Audio());\n  const currentIndexRef = useRef(currentIndex);\n  const childRefs = useMemo(\n    () =>\n      Array(songs.length)\n        .fill(0)\n        .map(() => React.createRef()),\n    [songs.length]\n  );\n\n  useEffect(() => {\n    fetchDaylist();\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n    };\n  }, []);\n\n  const fetchDaylist = async () => {\n    setIsLoading(true);\n    try {\n      // Adjust the URL to where your backend endpoint for getDaylist is hosted\n      const response = await fetch(\"http://localhost:8080/playlistTracks\", {\n        credentials: \"include\",\n        mode: \"cors\",\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch daylist\");\n      const data = await response.json();\n      const thankYouCard = {\n        song_name: \"Thank You for Playing!\",\n        album_cover: \"https://eecs441soloway.github.io/images/soloway.jpg\", // You could specify an image URL for the thank you card background\n        album_name: \"We hope you enjoyed the experience.\",\n        artist_names: \"- MoodMixx Team\",\n        isThankYouCard: true, // A flag to identify the thank you card\n      };\n      setSongs([thankYouCard, ...data.song_info]);\n      setCurrentIndex(data.song_info.length);\n    } catch (error) {\n      console.error(\"Error fetching daylist:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateCurrentIndex = (val) => {\n    setCurrentIndex(val);\n    currentIndexRef.current = val;\n  };\n\n  const canGoBack = currentIndex < songs.length - 1;\n\n  const canSwipe = currentIndex >= 0;\n\n  // set last direction and decrease current index\n  function stop() {\n    audioRef.current.pause();\n  }\n\n  const swiped = (direction, nameToDelete, index, song_preview, track_id) => {\n    setLastDirection(direction);\n    updateCurrentIndex(index - 1);\n    stop();\n    if (direction === \"right\") {\n      // Make a POST request to the server to add track to Spotify library\n      fetch(\"http://localhost:8080/addTrack\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ trackId: track_id }),\n        credentials: \"include\", // Include credentials for CORS and sessions\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data); // You can process server response here\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n        });\n    }\n  };\n\n  const outOfFrame = (name, idx) => {\n    console.log(`${name} (${idx}) left the screen!`, currentIndexRef.current);\n    // handle the case in which go back is pressed before card goes outOfFrame\n    currentIndexRef.current >= idx && childRefs[idx].current.restoreCard();\n    // TODO: when quickly swipe and restore multiple times the same card,\n    // it happens multiple outOfFrame events are queued and the card disappear\n    // during latest swipes. Only the last outOfFrame event should be considered valid\n  };\n\n  const swipe = async (dir) => {\n    if (canSwipe && currentIndex < songs.length) {\n      await childRefs[currentIndex].current.swipe(dir); // Swipe the card!\n    }\n  };\n\n  // increase current index and show card\n  const goBack = async () => {\n    if (!canGoBack) return;\n    const newIndex = currentIndex + 1;\n    updateCurrentIndex(newIndex);\n    stop();\n    await childRefs[newIndex].current.restoreCard();\n  };\n\n  function StartButton({ song_preview }) {\n    function start() {\n      if (song) {\n        song.pause(); // Ensures any currently playing song is stopped\n        song.currentTime = 0; // Resets the playback position\n      }\n      const audio = new Audio(song_preview);\n      audio.play();\n      setSong(audio);\n    }\n\n    return (\n      <button className=\"play-button\" onClick={start}>\n        Play!\n      </button>\n    );\n  }\n\n  function StopButton() {\n    function stop() {\n      console.log(\"song from react:\", song);\n      song.pause();\n      console.log(\"did this stop\");\n    }\n\n    return (\n      <button className=\"pause-button\" onClick={stop}>\n        Pause!\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500&family=MuseoModerno:ital,wght@0,100..900;1,100..900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Alatsi&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <h1 className=\"moodmixx-title\">moodmixx</h1>\n      <div className=\"cardContainer\">\n        {songs.map((song, index) => (\n          <div>\n            <TinderCard\n              ref={childRefs[index]}\n              className=\"swipe\"\n              key={song.song_name}\n              onSwipe={(dir) =>\n                swiped(\n                  dir,\n                  song.song_name,\n                  index,\n                  song.preview_url,\n                  song.track_id\n                )\n              }\n              onCardLeftScreen={() => outOfFrame(song.song_name, index)}\n            >\n              <div\n                style={{ backgroundImage: \"url(\" + song.album_cover + \")\" }}\n                className=\"card\"\n              >\n                <h2>{song.song_name}</h2>\n                <p>\n                  {song.album_name} <br></br>\n                  {song.artist_names}\n                </p>\n              </div>\n              <StartButton song_preview={song.preview_url} />\n              {<StopButton />}\n            </TinderCard>\n          </div>\n        ))}\n      </div>\n      <div className=\"buttons\">\n        <button\n          style={{ backgroundColor: !canSwipe && \"#c3c4d3\" }}\n          onClick={() => swipe(\"left\")}\n        >\n          Swipe left!\n        </button>\n        <button\n          style={{ backgroundColor: !canGoBack && \"#c3c4d3\" }}\n          onClick={() => goBack()}\n        >\n          Undo swipe!\n        </button>\n        <button\n          style={{ backgroundColor: !canSwipe && \"#c3c4d3\" }}\n          onClick={() => swipe(\"right\")}\n        >\n          Swipe right!\n        </button>\n      </div>\n      {lastDirection ? (\n        <h2 key={lastDirection} className=\"infoText\">\n          You swiped {lastDirection}\n        </h2>\n      ) : (\n        <h2 className=\"infoText\">Swipe a card to get started!</h2>\n      )}\n    </div>\n  );\n}\n\nexport default Advanced;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}