{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _ = require('./');\nvar _2 = _interopRequireDefault(_);\nvar _transformers = require('../inc/transformers');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar TrackOffset = function (_Action) {\n  _inherits(TrackOffset, _Action);\n  function TrackOffset() {\n    _classCallCheck(this, TrackOffset);\n    return _possibleConstructorReturn(this, _Action.apply(this, arguments));\n  }\n  TrackOffset.prototype.onStart = function onStart() {\n    var action = this.props.action;\n    this.applyOffset = (0, _transformers.applyOffset)(action.get(), this.current);\n  };\n  TrackOffset.prototype.update = function update() {\n    var action = this.props.action;\n    return this.applyOffset(action.get());\n  };\n  return TrackOffset;\n}(_2.default);\nexports.default = function (action, props) {\n  return new TrackOffset(_extends({\n    action: action\n  }, props));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,W;;;;;;wBACJC,O,sBAAU;IAAA,IACAC,MADA,GACW,KAAKC,KADhB,CACAD,MADA;IAER,KAAKE,WAAL,GAAmB,+BAAYF,OAAOG,GAAP,EAAZ,EAA0B,KAAKC,OAA/B,CAAnB;EACD,C;wBAEDC,M,qBAAS;IAAA,IACCL,MADD,GACY,KAAKC,KADjB,CACCD,MADD;IAEP,OAAO,KAAKE,WAAL,CAAiBF,OAAOG,GAAP,EAAjB,CAAP;EACD,C;;;kBAGY,UAACH,MAAD,EAASC,KAAT;EAAA,OAAmB,IAAIH,WAAJ;IAAkBE;EAAlB,GAA6BC,KAA7B,EAAnB;AAAA,C","names":["TrackOffset","onStart","action","props","applyOffset","get","current","update"],"sources":["/Users/gunhaar/Desktop/441proj/moodmixx/node_modules/popmotion/src/actions/track-offset.js"],"sourcesContent":["import Action from './';\nimport { applyOffset } from '../inc/transformers';\n\nclass TrackOffset extends Action {\n  onStart() {\n    const { action } = this.props;\n    this.applyOffset = applyOffset(action.get(), this.current);\n  }\n\n  update() {\n    const { action } = this.props;\n    return this.applyOffset(action.get());\n  }\n}\n\nexport default (action, props) => new TrackOffset({ action, ...props });\n"]},"metadata":{},"sourceType":"script"}