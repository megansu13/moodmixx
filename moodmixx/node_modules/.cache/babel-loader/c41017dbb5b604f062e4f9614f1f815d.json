{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = build;\nvar _utils = require('../../inc/utils');\nvar _transformProps = require('../css/transform-props');\nvar _transformProps2 = _interopRequireDefault(_transformProps);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar ZERO_NOT_ZERO = 0.0001;\nfunction build(state, data) {\n  var hasTransform = false;\n  var props = {};\n  var scale = state.scale !== undefined ? state.scale || ZERO_NOT_ZERO : state.scaleX || 1;\n  var scaleY = state.scaleY !== undefined ? state.scaleY || ZERO_NOT_ZERO : scale || 1;\n  var transformOriginX = data.width * ((state.originX || 50) / 100) + data.x;\n  var transformOriginY = data.height * ((state.originY || 50) / 100) + data.y;\n  var scaleTransformX = -transformOriginX * (scale * 1);\n  var scaleTransformY = -transformOriginY * (scaleY * 1);\n  var scaleReplaceX = transformOriginX / scale;\n  var scaleReplaceY = transformOriginY / scaleY;\n  var transform = {\n    translate: 'translate(' + state.translateX + ', ' + state.translateY + ') ',\n    scale: 'translate(' + scaleTransformX + ', ' + scaleTransformY + ') scale(' + scale + ', ' + scaleY + ') translate(' + scaleReplaceX + ', ' + scaleReplaceY + ') ',\n    rotate: 'rotate(' + state.rotate + ', ' + transformOriginX + ', ' + transformOriginY + ') ',\n    skewX: 'skewX(' + state.skewX + ') ',\n    skewY: 'skewY(' + state.skewY + ') '\n  };\n  for (var key in state) {\n    if (state.hasOwnProperty(key)) {\n      if (_transformProps2.default[key]) {\n        hasTransform = true;\n      } else {\n        props[(0, _utils.camelToDash)(key)] = state[key];\n      }\n    }\n  }\n  if (hasTransform) {\n    props.transform = '';\n    for (var _key in transform) {\n      if (transform.hasOwnProperty(_key)) {\n        var defaultValue = _key === 'scale' ? '1' : '0';\n        props.transform += transform[_key].replace(/undefined/g, defaultValue);\n      }\n    }\n  }\n  return props;\n}","map":{"version":3,"mappings":";;;kBAKwBA,K;AALxB;AACA;;;;;;;AAEA,IAAMC,gBAAgB,MAAtB;AAEe,SAASD,KAAT,CAAeE,KAAf,EAAsBC,IAAtB,EAA4B;EACzC,IAAIC,eAAe,KAAnB;EACA,IAAMC,QAAQ,EAAd;EACA,IAAMC,QAAQJ,MAAMI,KAAN,KAAgBC,SAAhB,GAA4BL,MAAMI,KAAN,IAAeL,aAA3C,GAA2DC,MAAMM,MAAN,IAAgB,CAAzF;EACA,IAAMC,SAASP,MAAMO,MAAN,KAAiBF,SAAjB,GAA6BL,MAAMO,MAAN,IAAgBR,aAA7C,GAA6DK,SAAS,CAArF;EACA,IAAMI,mBAAmBP,KAAKQ,KAAL,IAAc,CAACT,MAAMU,OAAN,IAAiB,EAAlB,IAAwB,GAAtC,IAA6CT,KAAKU,CAA3E;EACA,IAAMC,mBAAmBX,KAAKY,MAAL,IAAe,CAACb,MAAMc,OAAN,IAAiB,EAAlB,IAAwB,GAAvC,IAA8Cb,KAAKc,CAA5E;EACA,IAAMC,kBAAkB,CAAER,gBAAF,IAAsBJ,QAAQ,CAA9B,CAAxB;EACA,IAAMa,kBAAkB,CAAEL,gBAAF,IAAsBL,SAAS,CAA/B,CAAxB;EACA,IAAMW,gBAAgBV,mBAAmBJ,KAAzC;EACA,IAAMe,gBAAgBP,mBAAmBL,MAAzC;EACA,IAAMa,YAAY;IAChBC,0BAAwBrB,MAAMsB,UAA9B,UAA6CtB,MAAMuB,UAAnD,OADgB;IAEhBnB,sBAAoBY,eAApB,UAAwCC,eAAxC,gBAAkEb,KAAlE,UAA4EG,MAA5E,oBAAiGW,aAAjG,UAAmHC,aAAnH,OAFgB;IAGhBK,oBAAkBxB,MAAMwB,MAAxB,UAAmChB,gBAAnC,UAAwDI,gBAAxD,OAHgB;IAIhBa,kBAAgBzB,MAAMyB,KAAtB,OAJgB;IAKhBC,kBAAgB1B,MAAM0B,KAAtB;EALgB,CAAlB;EAQA,KAAK,IAAIC,GAAT,IAAgB3B,KAAhB,EAAuB;IACrB,IAAIA,MAAM4B,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;MAC7B,IAAIE,yBAAeF,GAAf,CAAJ,EAAyB;QACvBzB,eAAe,IAAf;MACD,CAFD,MAEO;QACLC,MAAM,wBAAYwB,GAAZ,CAAN,IAA0B3B,MAAM2B,GAAN,CAA1B;MACD;IACF;EACF;EAED,IAAIzB,YAAJ,EAAkB;IAChBC,MAAMiB,SAAN,GAAkB,EAAlB;IAEA,KAAK,IAAIO,IAAT,IAAgBP,SAAhB,EAA2B;MACzB,IAAIA,UAAUQ,cAAV,CAAyBD,IAAzB,CAAJ,EAAmC;QACjC,IAAMG,eAAgBH,SAAQ,OAAT,GAAoB,GAApB,GAA0B,GAA/C;QACAxB,MAAMiB,SAAN,IAAmBA,UAAUO,IAAV,EAAeI,OAAf,CAAuB,YAAvB,EAAqCD,YAArC,CAAnB;MACD;IACF;EACF;EAED,OAAO3B,KAAP;AACD","names":["build","ZERO_NOT_ZERO","state","data","hasTransform","props","scale","undefined","scaleX","scaleY","transformOriginX","width","originX","x","transformOriginY","height","originY","y","scaleTransformX","scaleTransformY","scaleReplaceX","scaleReplaceY","transform","translate","translateX","translateY","rotate","skewX","skewY","key","hasOwnProperty","_transformProps2","defaultValue","replace"],"sources":["/Users/megansu/Desktop/eecs441/moodmixx/moodmixx/node_modules/popmotion/src/renderers/svg/build.js"],"sourcesContent":["import { camelToDash } from '../../inc/utils';\nimport transformProps from '../css/transform-props';\n\nconst ZERO_NOT_ZERO = 0.0001;\n\nexport default function build(state, data) {\n  let hasTransform = false;\n  const props = {};\n  const scale = state.scale !== undefined ? state.scale || ZERO_NOT_ZERO : state.scaleX || 1;\n  const scaleY = state.scaleY !== undefined ? state.scaleY || ZERO_NOT_ZERO : scale || 1;\n  const transformOriginX = data.width * ((state.originX || 50) / 100) + data.x;\n  const transformOriginY = data.height * ((state.originY || 50) / 100) + data.y;\n  const scaleTransformX = - transformOriginX * (scale * 1);\n  const scaleTransformY = - transformOriginY * (scaleY * 1);\n  const scaleReplaceX = transformOriginX / scale;\n  const scaleReplaceY = transformOriginY / scaleY;\n  const transform = {\n    translate: `translate(${state.translateX}, ${state.translateY}) `,\n    scale: `translate(${scaleTransformX}, ${scaleTransformY}) scale(${scale}, ${scaleY}) translate(${scaleReplaceX}, ${scaleReplaceY}) `,\n    rotate: `rotate(${state.rotate}, ${transformOriginX}, ${transformOriginY}) `,\n    skewX: `skewX(${state.skewX}) `,\n    skewY: `skewY(${state.skewY}) `\n  };\n\n  for (let key in state) {\n    if (state.hasOwnProperty(key)) {\n      if (transformProps[key]) {\n        hasTransform = true;\n      } else {\n        props[camelToDash(key)] = state[key];\n      }\n    }\n  }\n\n  if (hasTransform) {\n    props.transform = '';\n\n    for (let key in transform) {\n      if (transform.hasOwnProperty(key)) {\n        const defaultValue = (key === 'scale') ? '1' : '0';\n        props.transform += transform[key].replace(/undefined/g, defaultValue);\n      }\n    }\n  }\n\n  return props;\n}\n"]},"metadata":{},"sourceType":"script"}