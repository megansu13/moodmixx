{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _utils = require('../../inc/utils');\nvar camelCache = {};\nvar dashCache = {};\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms', ''];\nvar numPrefixes = prefixes.length;\nvar testElement = void 0;\n\n/*\n  Test style property for prefixed version\n  \n  @param [string]: Style property\n  @return [string]: Cached property name\n*/\nvar testPrefix = function testPrefix(key) {\n  testElement = testElement || document.createElement('div');\n  for (var i = 0; i < numPrefixes; i++) {\n    var prefix = prefixes[i];\n    var noPrefix = prefix === '';\n    var prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n    if (prefixedPropertyName in testElement.style) {\n      camelCache[key] = prefixedPropertyName;\n      dashCache[key] = '' + (noPrefix ? '' : '-') + (0, _utils.camelToDash)(prefixedPropertyName);\n    }\n  }\n};\nexports.default = function (key, asDashCase) {\n  var cache = asDashCase ? dashCache : camelCache;\n  if (!cache[key]) {\n    testPrefix(key);\n  }\n  return cache[key];\n};","map":{"version":3,"mappings":";;;AAAA;AAEA,IAAMA,aAAa,EAAnB;AACA,IAAMC,YAAY,EAAlB;AACA,IAAMC,WAAW,CAAC,QAAD,EAAU,KAAV,EAAgB,GAAhB,EAAoB,IAApB,EAA0B,EAA1B,CAAjB;AACA,IAAMC,cAAcD,SAASE,MAA7B;AACA,IAAIC,oBAAJ;;AAEA;;;;;;AAMA,IAAMC,aAAa,SAAbA,UAAa,CAACC,GAAD,EAAS;EAC1BF,cAAcA,eAAeG,SAASC,aAAT,CAAuB,KAAvB,CAA7B;EAEA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIP,WAApB,EAAiCO,GAAjC,EAAsC;IACpC,IAAMC,SAAST,SAASQ,CAAT,CAAf;IACA,IAAME,WAAYD,WAAW,EAA7B;IACA,IAAME,uBAAuBD,WAAWL,GAAX,GAAiBI,SAASJ,IAAIO,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAT,GAAuCR,IAAIS,KAAJ,CAAU,CAAV,CAArF;IAEA,IAAIH,wBAAwBR,YAAYY,KAAxC,EAA+C;MAC7CjB,WAAWO,GAAX,IAAkBM,oBAAlB;MACAZ,UAAUM,GAAV,UAAqBK,WAAW,EAAX,GAAgB,GAArC,IAA4C,wBAAYC,oBAAZ,CAA5C;IACD;EACF;AACF,CAbD;kBAee,UAACN,GAAD,EAAMW,UAAN,EAAqB;EAClC,IAAMC,QAAQD,aAAajB,SAAb,GAAyBD,UAAvC;EAEA,IAAI,CAACmB,MAAMZ,GAAN,CAAL,EAAiB;IACfD,WAAWC,GAAX;EACD;EAED,OAAOY,MAAMZ,GAAN,CAAP;AACD,C","names":["camelCache","dashCache","prefixes","numPrefixes","length","testElement","testPrefix","key","document","createElement","i","prefix","noPrefix","prefixedPropertyName","charAt","toUpperCase","slice","style","asDashCase","cache"],"sources":["/Users/megansu/Desktop/eecs441/moodmixx/moodmixx/node_modules/popmotion/src/renderers/css/prefixer.js"],"sourcesContent":["import { camelToDash } from '../../inc/utils';\n\nconst camelCache = {};\nconst dashCache = {};\nconst prefixes = ['Webkit','Moz','O','ms', ''];\nconst numPrefixes = prefixes.length;\nlet testElement;\n\n/*\n  Test style property for prefixed version\n  \n  @param [string]: Style property\n  @return [string]: Cached property name\n*/\nconst testPrefix = (key) => {\n  testElement = testElement || document.createElement('div');\n\n  for (let i = 0; i < numPrefixes; i++) {\n    const prefix = prefixes[i];\n    const noPrefix = (prefix === '');\n    const prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n\n    if (prefixedPropertyName in testElement.style) {\n      camelCache[key] = prefixedPropertyName;\n      dashCache[key] = `${(noPrefix ? '' : '-')}${camelToDash(prefixedPropertyName)}`;\n    }\n  }\n};\n\nexport default (key, asDashCase) => {\n  const cache = asDashCase ? dashCache : camelCache;\n\n  if (!cache[key]) {\n    testPrefix(key);\n  }\n\n  return cache[key];\n};\n"]},"metadata":{},"sourceType":"script"}