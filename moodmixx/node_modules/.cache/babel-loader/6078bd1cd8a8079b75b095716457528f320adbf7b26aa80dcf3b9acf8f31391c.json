{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n/*\n  Convert percentage to pixels\n\n  @param [number]: Percentage of total length\n  @param [number]: Total length\n*/\nvar percentToPixels = function percentToPixels(percent, length) {\n  return parseFloat(percent) / 100 * length + 'px';\n};\nexports.default = function (state, length) {\n  var styles = {};\n  var dashArrayStyles = {\n    length: '0',\n    spacing: length + 'px'\n  };\n  var hasDashArray = false;\n  for (var key in state) {\n    if (state.hasOwnProperty(key)) {\n      var value = state[key];\n      switch (key) {\n        case 'length':\n        case 'spacing':\n          hasDashArray = true;\n          dashArrayStyles[key] = percentToPixels(value, length);\n          break;\n        case 'offset':\n          styles['stroke-dashoffset'] = percentToPixels(-value, length);\n          break;\n        default:\n          styles[key] = value;\n      }\n    }\n  }\n  if (hasDashArray) {\n    styles['stroke-dasharray'] = dashArrayStyles.length + ' ' + dashArrayStyles.spacing;\n  }\n  return styles;\n};","map":{"version":3,"names":["percentToPixels","percent","length","parseFloat","state","styles","dashArrayStyles","spacing","hasDashArray","key","hasOwnProperty","value"],"sources":["/Users/megansu/Desktop/eecs441/moodmixx/moodmixx/node_modules/popmotion/src/renderers/svg-path/build.js"],"sourcesContent":["/*\n  Convert percentage to pixels\n\n  @param [number]: Percentage of total length\n  @param [number]: Total length\n*/\nconst percentToPixels = (percent, length) => (parseFloat(percent) / 100) * length + 'px';\n\nexport default (state, length) => {\n  const styles = {};\n  const dashArrayStyles = {\n    length: '0',\n    spacing: length + 'px'\n  };\n  let hasDashArray = false;\n\n  for (let key in state) {\n    if (state.hasOwnProperty(key)) {\n      const value = state[key];\n\n      switch (key) {\n      case 'length':\n      case 'spacing':\n        hasDashArray = true;\n        dashArrayStyles[key] = percentToPixels(value, length);\n        break;\n      case 'offset':\n        styles['stroke-dashoffset'] = percentToPixels(-value, length);\n        break;\n      default:\n        styles[key] = value;\n      }\n    }\n  }\n\n  if (hasDashArray) {\n    styles['stroke-dasharray'] = dashArrayStyles.length + ' ' + dashArrayStyles.spacing;\n  }\n\n  return styles;\n};\n"],"mappings":";;;AAAA;;;;;;AAMA,IAAMA,eAAA,GAAkB,SAAlBA,eAAkBA,CAACC,OAAD,EAAUC,MAAV;EAAA,OAAsBC,UAAA,CAAWF,OAAX,IAAsB,GAAvB,GAA8BC,MAA9B,GAAuC,IAA5D;AAAA,CAAxB;kBAEe,UAACE,KAAD,EAAQF,MAAR,EAAmB;EAChC,IAAMG,MAAA,GAAS,EAAf;EACA,IAAMC,eAAA,GAAkB;IACtBJ,MAAA,EAAQ,GADc;IAEtBK,OAAA,EAASL,MAAA,GAAS;EAFI,CAAxB;EAIA,IAAIM,YAAA,GAAe,KAAnB;EAEA,KAAK,IAAIC,GAAT,IAAgBL,KAAhB,EAAuB;IACrB,IAAIA,KAAA,CAAMM,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;MAC7B,IAAME,KAAA,GAAQP,KAAA,CAAMK,GAAN,CAAd;MAEA,QAAQA,GAAR;QACA,KAAK,QAAL;QACA,KAAK,SAAL;UACED,YAAA,GAAe,IAAf;UACAF,eAAA,CAAgBG,GAAhB,IAAuBT,eAAA,CAAgBW,KAAhB,EAAuBT,MAAvB,CAAvB;UACA;QACF,KAAK,QAAL;UACEG,MAAA,CAAO,mBAAP,IAA8BL,eAAA,CAAgB,CAACW,KAAjB,EAAwBT,MAAxB,CAA9B;UACA;QACF;UACEG,MAAA,CAAOI,GAAP,IAAcE,KAAd;MAVF;IAYD;EACF;EAED,IAAIH,YAAJ,EAAkB;IAChBH,MAAA,CAAO,kBAAP,IAA6BC,eAAA,CAAgBJ,MAAhB,GAAyB,GAAzB,GAA+BI,eAAA,CAAgBC,OAA5E;EACD;EAED,OAAOF,MAAP;AACD,C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}