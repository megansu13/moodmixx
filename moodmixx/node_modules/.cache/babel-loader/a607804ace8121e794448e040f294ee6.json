{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _chain = require('./chain');\nvar _chain2 = _interopRequireDefault(_chain);\nvar _parallel = require('./parallel');\nvar _parallel2 = _interopRequireDefault(_parallel);\nvar _delay = require('./delay');\nvar _delay2 = _interopRequireDefault(_delay);\nvar _utils = require('../inc/utils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Creates a new parallel Action composed of chained\n * delay and actions. Interval can be either a number\n * to multiply by `i` or a function that will be provided `i`\n *\n * Straight cribbed from https://github.com/facebook/react-native/blob/24c72f513e48f0bdc40820b43262328fe2c301d4/Libraries/Animated/src/AnimatedImplementation.js#L2031\n * ^ This function sold a previously-conflicted me on the merit of moving from\n * jQuery-style multi-property animations to single-property.\n * @param  {array} actions\n * @param  {function | number} interval\n * @return {Action}\n */\nexports.default = function (actions, interval, onComplete) {\n  var intervalIsFunction = (0, _utils.isFunc)(interval);\n  return (0, _parallel2.default)(actions.map(function (action, i) {\n    var timeToDelay = intervalIsFunction ? interval(i) : i * interval;\n    return (0, _chain2.default)([(0, _delay2.default)(timeToDelay), action]);\n  }), {\n    onComplete: onComplete\n  });\n};","map":{"version":3,"mappings":";;;AAAA;;AACA;;AACA;;AACA;;;;;;;AAEA;;;;;;;;;;;;kBAYe,UAACA,OAAD,EAAUC,QAAV,EAAoBC,UAApB,EAAmC;EAChD,IAAMC,qBAAqB,mBAAOF,QAAP,CAA3B;EAEA,OAAO,wBAASD,QAAQI,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT,EAAe;IACzC,IAAMC,cAAeJ,kBAAD,GAAuBF,SAASK,CAAT,CAAvB,GAAqCA,IAAIL,QAA7D;IACA,OAAO,qBAAM,CACX,qBAAMM,WAAN,CADW,EAEXF,MAFW,CAAN,CAAP;EAID,CANe,CAAT,EAMH;IAAEH;EAAF,CANG,CAAP;AAOD,C","names":["actions","interval","onComplete","intervalIsFunction","map","action","i","timeToDelay"],"sources":["/Users/gunhaar/Desktop/441proj/moodmixx/node_modules/popmotion/src/actions/stagger.js"],"sourcesContent":["import chain from './chain';\nimport parallel from './parallel';\nimport delay from './delay';\nimport { isFunc } from '../inc/utils';\n\n/**\n * Creates a new parallel Action composed of chained\n * delay and actions. Interval can be either a number\n * to multiply by `i` or a function that will be provided `i`\n *\n * Straight cribbed from https://github.com/facebook/react-native/blob/24c72f513e48f0bdc40820b43262328fe2c301d4/Libraries/Animated/src/AnimatedImplementation.js#L2031\n * ^ This function sold a previously-conflicted me on the merit of moving from\n * jQuery-style multi-property animations to single-property.\n * @param  {array} actions\n * @param  {function | number} interval\n * @return {Action}\n */\nexport default (actions, interval, onComplete) => {\n  const intervalIsFunction = isFunc(interval);\n\n  return parallel(actions.map((action, i) => {\n    const timeToDelay = (intervalIsFunction) ? interval(i) : i * interval;\n    return chain([\n      delay(timeToDelay),\n      action\n    ]);\n  }), { onComplete });\n};\n"]},"metadata":{},"sourceType":"script"}