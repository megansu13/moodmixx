{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _ = require('./');\nvar _2 = _interopRequireDefault(_);\nvar _framesync = require('framesync');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /*\n    The closed-form damped harmonic oscillating spring.\n    Or, spring.\n  \n    This is a direct port of Adam Miskiewicz's (@skevy) React Animated\n    PR #15322 https://github.com/facebook/react-native/pull/15322/\n  \n    ```\n    spring({\n      mass: 2,\n      damping: 10,\n      stiffness: 100,\n      to: 100\n    }).start();\n    ```\n  \n    Adam Miskiewicz:\n    @skevy (twitter.com/skevy, github.com/skevy)\n   */\n\nvar Spring = function (_Action) {\n  _inherits(Spring, _Action);\n  function Spring() {\n    _classCallCheck(this, Spring);\n    return _possibleConstructorReturn(this, _Action.apply(this, arguments));\n  }\n  Spring.prototype.onStart = function onStart() {\n    var _props = this.props,\n      velocity = _props.velocity,\n      to = _props.to,\n      from = _props.from;\n    this.t = 0;\n    this.initialVelocity = velocity ? velocity / 1000 : 0.0;\n    this.isComplete = false;\n    this.delta = to - from;\n  };\n  Spring.prototype.update = function update() {\n    var _props2 = this.props,\n      stiffness = _props2.stiffness,\n      damping = _props2.damping,\n      mass = _props2.mass,\n      from = _props2.from,\n      to = _props2.to,\n      restSpeed = _props2.restSpeed,\n      restDisplacement = _props2.restDisplacement;\n    var delta = this.delta,\n      initialVelocity = this.initialVelocity;\n    var timeDelta = (0, _framesync.timeSinceLastFrame)() / 1000;\n    var t = this.t = this.t + timeDelta;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var angularFreq = Math.sqrt(stiffness / mass);\n    var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n    var x0 = 1;\n    var oscillation = 0.0;\n\n    // Underdamped\n    if (dampingRatio < 1) {\n      var envelope = Math.exp(-dampingRatio * angularFreq * t);\n      oscillation = envelope * ((initialVelocity + dampingRatio * angularFreq * x0) / expoDecay * Math.sin(expoDecay * t) + x0 * Math.cos(expoDecay * t));\n      this.velocity = envelope * (Math.cos(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * x0) - expoDecay * x0 * Math.sin(expoDecay * t)) - dampingRatio * angularFreq * envelope * (Math.sin(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * x0) / expoDecay + x0 * Math.cos(expoDecay * t));\n\n      // Critically damped\n    } else {\n      var _envelope = Math.exp(-angularFreq * t);\n      oscillation = _envelope * (x0 + (initialVelocity + angularFreq * x0) * t);\n      this.velocity = _envelope * (t * initialVelocity * angularFreq - t * x0 * (angularFreq * angularFreq) + initialVelocity);\n    }\n    var fraction = 1 - oscillation;\n    var position = from + fraction * delta;\n\n    // Check if simulation is complete\n    // We do this here instead of `isActionComplete` as it allows us\n    // to clamp to end during update)\n    var isBelowVelocityThreshold = Math.abs(this.velocity) <= restSpeed;\n    var isBelowDisplacementThreshold = Math.abs(to - position) <= restDisplacement;\n    this.isComplete = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n    if (this.isComplete) {\n      position = to;\n    }\n    return position;\n  };\n  Spring.prototype.isActionComplete = function isActionComplete() {\n    return this.isComplete;\n  };\n  return Spring;\n}(_2.default);\nSpring.defaultProps = {\n  stiffness: 100,\n  damping: 10,\n  mass: 1.0,\n  velocity: 0.0,\n  from: 0.0,\n  to: 0.0,\n  restSpeed: 0.01,\n  restDisplacement: 0.01\n};\nexports.default = function (props) {\n  return new Spring(props);\n};","map":{"version":3,"names":["_","require","_framesync","Spring","onStart","_props","props","velocity","to","from","t","initialVelocity","isComplete","delta","update","_props2","stiffness","damping","mass","restSpeed","restDisplacement","timeDelta","timeSinceLastFrame","dampingRatio","Math","sqrt","angularFreq","expoDecay","x0","oscillation","envelope","exp","sin","cos","_envelope","fraction","position","isBelowVelocityThreshold","abs","isBelowDisplacementThreshold","isActionComplete","defaultProps"],"sources":["/Users/megansu/Desktop/eecs441/moodmixx/moodmixx/node_modules/popmotion/src/actions/spring.js"],"sourcesContent":["/*\n  The closed-form damped harmonic oscillating spring.\n  Or, spring.\n\n  This is a direct port of Adam Miskiewicz's (@skevy) React Animated\n  PR #15322 https://github.com/facebook/react-native/pull/15322/\n\n  ```\n  spring({\n    mass: 2,\n    damping: 10,\n    stiffness: 100,\n    to: 100\n  }).start();\n  ```\n\n  Adam Miskiewicz:\n  @skevy (twitter.com/skevy, github.com/skevy)\n */\nimport Action from './';\nimport { timeSinceLastFrame } from 'framesync';\n\nclass Spring extends Action {\n  static defaultProps = {\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    from: 0.0,\n    to: 0.0,\n    restSpeed: 0.01,\n    restDisplacement: 0.01\n  };\n\n  onStart() {\n    const { velocity, to, from } = this.props;\n    this.t = 0;\n    this.initialVelocity = velocity ? velocity / 1000 : 0.0;\n    this.isComplete = false;\n    this.delta = to - from;\n  }\n\n  update() {\n    const { stiffness, damping, mass, from, to, restSpeed, restDisplacement } = this.props;\n    const { delta, initialVelocity } = this;\n\n    const timeDelta = timeSinceLastFrame() / 1000;\n    const t = this.t = this.t + timeDelta;\n\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const angularFreq = Math.sqrt(stiffness / mass);\n    const expoDecay = angularFreq * Math.sqrt(1.0 - (dampingRatio * dampingRatio));\n\n    const x0 = 1;\n    let oscillation = 0.0;\n\n    // Underdamped\n    if (dampingRatio < 1) {\n      const envelope = Math.exp(-dampingRatio * angularFreq * t);\n      oscillation = envelope * (((initialVelocity + dampingRatio * angularFreq * x0) / expoDecay) * Math.sin(expoDecay * t) + (x0 * Math.cos(expoDecay * t)));\n      this.velocity = (envelope * ((Math.cos(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * x0)) - (expoDecay * x0 * Math.sin(expoDecay * t))) -\n        ((dampingRatio * angularFreq * envelope) * ((((Math.sin(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * x0)) ) / expoDecay) + (x0 * Math.cos(expoDecay * t)))));\n\n    // Critically damped\n    } else {\n      const envelope = Math.exp(-angularFreq * t);\n      oscillation = envelope * (x0 + (initialVelocity + (angularFreq * x0)) * t);\n      this.velocity = envelope * ((t * initialVelocity * angularFreq) - (t * x0 * (angularFreq * angularFreq)) + initialVelocity);\n    }\n\n    const fraction = 1 - oscillation;\n    let position = from + fraction * delta;\n\n    // Check if simulation is complete\n    // We do this here instead of `isActionComplete` as it allows us\n    // to clamp to end during update)\n    const isBelowVelocityThreshold = Math.abs(this.velocity) <= restSpeed;\n    const isBelowDisplacementThreshold = Math.abs(to - position) <= restDisplacement;\n    this.isComplete = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n\n    if (this.isComplete) {\n      position = to;\n    }\n\n    return position;\n  }\n\n  isActionComplete() {\n    return this.isComplete;\n  }\n}\n\nexport default (props) => new Spring(props);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}