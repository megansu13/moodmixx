{"ast":null,"code":"var _jsxFileName = \"/Users/gunhaar/Desktop/441proj/moodmixx/src/examples/PlaylistsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// other imports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaylistGrid(_ref) {\n  _s();\n  let {\n    onSelectPlaylist\n  } = _ref;\n  const [playlists, setPlaylists] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:8080/playlists\", {\n          credentials: \"include\",\n          mode: \"cors\"\n        });\n        const data = await response.json();\n        setPlaylists(data.playlists); // adjust according to your data structure\n      } catch (error) {\n        console.error(\"Error fetching playlists:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading playlists...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-grid\",\n    children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-item\",\n      style: {\n        backgroundImage: `url(${playlist.cover})`\n      },\n      onClick: () => onSelectPlaylist(playlist.id),\n      children: playlist.name\n    }, playlist.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaylistGrid, \"UnGPp0CV/kJSo+Dqm5pl+OinWbk=\");\n_c = PlaylistGrid;\nexport default PlaylistGrid;\nvar _c;\n$RefreshReg$(_c, \"PlaylistGrid\");","map":{"version":3,"names":["React","useState","useEffect","PlaylistGrid","onSelectPlaylist","playlists","setPlaylists","isLoading","setIsLoading","fetchPlaylists","response","fetch","credentials","mode","data","json","error","console","map","playlist","backgroundImage","cover","id","name"],"sources":["/Users/gunhaar/Desktop/441proj/moodmixx/src/examples/PlaylistsGrid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// other imports\n\nfunction PlaylistGrid({ onSelectPlaylist }) {\n  const [playlists, setPlaylists] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:8080/playlists\", {\n          credentials: \"include\",\n          mode: \"cors\",\n        });\n        const data = await response.json();\n        setPlaylists(data.playlists); // adjust according to your data structure\n      } catch (error) {\n        console.error(\"Error fetching playlists:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPlaylists();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading playlists...</div>;\n  }\n\n  return (\n    <div className=\"playlist-grid\">\n      {playlists.map((playlist) => (\n        <div\n          key={playlist.id}\n          className=\"playlist-item\"\n          style={{ backgroundImage: `url(${playlist.cover})` }}\n          onClick={() => onSelectPlaylist(playlist.id)}\n        >\n          {playlist.name}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default PlaylistGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AAAA;AAEA,SAASC,YAAY,OAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAiB,CAAC;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMO,cAAc,GAAG,YAAY;MACjCD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC9DC,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE;QACR,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCT,YAAY,CAACQ,IAAI,CAACT,SAAS,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,SAAS;QACRR,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,SAAS,EAAE;IACb,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B;EACxC;EAEA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,UAC3BF,SAAS,CAACa,GAAG,CAAEC,QAAQ,iBACtB;MAEE,SAAS,EAAC,eAAe;MACzB,KAAK,EAAE;QAAEC,eAAe,EAAG,OAAMD,QAAQ,CAACE,KAAM;MAAG,CAAE;MACrD,OAAO,EAAE,MAAMjB,gBAAgB,CAACe,QAAQ,CAACG,EAAE,CAAE;MAAA,UAE5CH,QAAQ,CAACI;IAAI,GALTJ,QAAQ,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAOnB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA1CQnB,YAAY;AAAA,KAAZA,YAAY;AA4CrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}