{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.color = exports.hsla = exports.rgba = exports.hex = undefined;\nvar _utils = require('./utils');\nvar hex = exports.hex = function hex(v) {\n  var r = void 0,\n    g = void 0,\n    b = void 0;\n\n  // If we have 6 characters, ie #FF0000\n  if (v.length > 4) {\n    r = v.substr(1, 2);\n    g = v.substr(3, 2);\n    b = v.substr(5, 2);\n\n    // Or we have 3 characters, ie #F00\n  } else {\n    r = v.substr(1, 1);\n    g = v.substr(2, 1);\n    b = v.substr(3, 1);\n    r += r;\n    g += g;\n    b += b;\n  }\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: 1\n  };\n};\nvar rgba = exports.rgba = (0, _utils.splitColorValues)(['red', 'green', 'blue', 'alpha']);\nvar hsla = exports.hsla = (0, _utils.splitColorValues)(['hue', 'saturation', 'lightness', 'alpha']);\nvar color = exports.color = function color(v) {\n  if ((0, _utils.isRgb)(v)) {\n    return rgba(v);\n  } else if ((0, _utils.isHex)(v)) {\n    return hex(v);\n  } else if ((0, _utils.isHsl)(v)) {\n    return hsla(v);\n  }\n  return v;\n};","map":{"version":3,"mappings":";;;;AAAA;AAEO,IAAMA,oBAAM,SAANA,GAAM,CAACC,CAAD,EAAO;EACxB,IAAIC,UAAJ;IAAOC,UAAP;IAAUC,UAAV;;EAEA;EACA,IAAIH,EAAEI,MAAF,GAAW,CAAf,EAAkB;IAChBH,IAAID,EAAEK,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAJ;IACAH,IAAIF,EAAEK,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAJ;IACAF,IAAIH,EAAEK,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAJ;;IAEF;EACC,CAND,MAMO;IACLJ,IAAID,EAAEK,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAJ;IACAH,IAAIF,EAAEK,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAJ;IACAF,IAAIH,EAAEK,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAJ;IACAJ,KAAKA,CAAL;IACAC,KAAKA,CAAL;IACAC,KAAKA,CAAL;EACD;EAED,OAAO;IACLG,KAAKC,SAASN,CAAT,EAAY,EAAZ,CADA;IAELO,OAAOD,SAASL,CAAT,EAAY,EAAZ,CAFF;IAGLO,MAAMF,SAASJ,CAAT,EAAY,EAAZ,CAHD;IAILO,OAAO;EAJF,CAAP;AAMD,CAzBM;AA2BA,IAAMC,sBAAO,6BAAiB,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,OAAzB,CAAjB,CAAb;AAEA,IAAMC,sBAAO,6BAAiB,CAAC,KAAD,EAAQ,YAAR,EAAsB,WAAtB,EAAmC,OAAnC,CAAjB,CAAb;AAEA,IAAMC,wBAAQ,SAARA,KAAQ,CAACb,CAAD,EAAO;EAC1B,IAAI,kBAAMA,CAAN,CAAJ,EAAc;IACZ,OAAOW,KAAKX,CAAL,CAAP;EACD,CAFD,MAEO,IAAI,kBAAMA,CAAN,CAAJ,EAAc;IACnB,OAAOD,IAAIC,CAAJ,CAAP;EACD,CAFM,MAEA,IAAI,kBAAMA,CAAN,CAAJ,EAAc;IACnB,OAAOY,KAAKZ,CAAL,CAAP;EACD;EAED,OAAOA,CAAP;AACD,CAVM","names":["hex","v","r","g","b","length","substr","red","parseInt","green","blue","alpha","rgba","hsla","color"],"sources":["/Users/megansu/Desktop/eecs441/moodmixx/moodmixx/node_modules/popmotion/src/inc/parsers.js"],"sourcesContent":["import { splitColorValues, isRgb, isHex, isHsl } from './utils';\n\nexport const hex = (v) => {\n  let r, g, b;\n\n  // If we have 6 characters, ie #FF0000\n  if (v.length > 4) {\n    r = v.substr(1, 2);\n    g = v.substr(3, 2);\n    b = v.substr(5, 2);\n\n  // Or we have 3 characters, ie #F00\n  } else {\n    r = v.substr(1, 1);\n    g = v.substr(2, 1);\n    b = v.substr(3, 1);\n    r += r;\n    g += g;\n    b += b;\n  }\n\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: 1\n  };\n};\n\nexport const rgba = splitColorValues(['red', 'green', 'blue', 'alpha']);\n\nexport const hsla = splitColorValues(['hue', 'saturation', 'lightness', 'alpha']);\n\nexport const color = (v) => {\n  if (isRgb(v)) {\n    return rgba(v);\n  } else if (isHex(v)) {\n    return hex(v);\n  } else if (isHsl(v)) {\n    return hsla(v);\n  }\n\n  return v;\n};\n"]},"metadata":{},"sourceType":"script"}